configmapReload:
  prometheus:
    enabled: true
    name: configmap-reload
    image:
      repository: quay.io/prometheus-operator/prometheus-config-reloader
      tag: v0.74.0
      pullPolicy: IfNotPresent

server:
  name: server
  image:
    repository: quay.io/prometheus/prometheus
    tag: "v2.53.0"
  global:
    scrape_interval: 1m
    scrape_timeout: 1m
    evaluation_interval: 1m
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - myprometheus.example.com
    tls:
      - hosts:
          - myprometheus.example.com
        secretName: cert-secret

  nodeSelector: {}

  persistentVolume:
    enabled: true
    accessModes:
      - ReadWriteOnce
    mountPath: /data
    size: 5Gi
    storageClass: "nfs-delete"
  
  alertmanagers:
    - static_configs:
        - targets:
            - prometheus-alertmanager:9093

  replicaCount: 1
  retention: "15d"
  retentionSize: "5GB"

serverFiles:
  alerting_rules.yml:
    groups:
      - name: containerRestart
        rules:
          - alert: containerRestart
            annotations:
              description: "Container in {{$labels.pod}} has been restarted"
            expr: increase(kube_pod_container_status_restarts_total[5m]) >= 1
            for: 0m
            labels:
              severity: critical

      - name: opensearchClusterStatus
        rules:
          - alert: opensearchClusterStatus
            expr: sum(opensearch_cluster_status) > 0
            for: 1m
            labels:
              severity: critical

      - name: logstashPipelineDown
        rules:
          - alert: logstashPipelineDown
            expr: max(logstash_stats_pipeline_up) != 1
            for: 1m
            labels:
              severity: critical

  prometheus.yml:
    rule_files:
      - /etc/config/recording_rules.yml
      - /etc/config/alerting_rules.yml
      - /etc/config/rules
      - /etc/config/alerts
    scrape_configs:
      - job_name: prometheus
        static_configs:
          - targets:
              - localhost:9090

extraScrapeConfigs: |
  - job_name: 'nw-opensearch-metric-job'
    static_configs:
      - targets:
          - opensearch-cluster-master-0.opensearch-cluster-master-headless.network-logging.svc.cluster.local:9200
    scheme: https
    basic_auth:
      username: admin
      password: Opensearch#123
    tls_config:
      insecure_skip_verify: true
    metrics_path: /_prometheus/metrics
    scrape_interval: 30s

alertmanager:
  enabled: true
  persistence:
    enabled: false
  ingress:
    enabled: true
    className: "nginx"
    hosts:
    - host: myalermanager.example.com
      paths:
        - path: /
          pathType: Prefix
    tls:
      - hosts:
          - myalermanager.example.com
        secretName: cert-secret
  config:
    enabled: true
    global:
      smtp_from: alertmanager@cluster.local
      smtp_smarthost: localhost:25 #192.168.56.251:25
    receivers:
      - name: general-email
        email_configs:
          - require_tls: false
            to: root@mail.cluster.local
    route:
      group_by:
        - alertname
      group_interval: 2m
      group_wait: 10s
      receiver: general-email
      repeat_interval: 5m

kube-state-metrics:
  enabled: false

prometheus-node-exporter:
  enabled: false
  rbac:
    pspEnabled: false
  containerSecurityContext:
    allowPrivilegeEscalation: false

prometheus-pushgateway:
  enabled: false

serviceAccounts:
  server:
    create: false

rbac:
  create: true